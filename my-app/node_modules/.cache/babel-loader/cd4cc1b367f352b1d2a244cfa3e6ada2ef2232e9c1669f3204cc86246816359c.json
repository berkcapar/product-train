{"ast":null,"code":"var _jsxFileName = \"/Users/berkcapar/Desktop/Berk/Code/product.content/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Make sure to create an App.css file for styles\n\n// Card component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card({\n  title,\n  image,\n  date,\n  url\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: () => window.open(url, \"_blank\"),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n// Main App component\n_c = Card;\nfunction App() {\n  _s();\n  const [articles, setArticles] = useState([]);\n  useEffect(() => {\n    // Adjust the URL according to your server setup\n    fetch('http://localhost:4000/scrape').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setArticles(data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: articles.map(article => /*#__PURE__*/_jsxDEV(Card, {\n      title: article.title,\n      image: article.image,\n      date: article.published_date,\n      url: article.url\n    }, article.url, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XsOpLvUbTkfx79dw07TVNsBviNQ=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Card","title","image","date","url","className","onClick","window","open","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","articles","setArticles","fetch","then","response","ok","Error","json","data","catch","error","console","map","article","published_date","_c2","$RefreshReg$"],"sources":["/Users/berkcapar/Desktop/Berk/Code/product.content/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css'; // Make sure to create an App.css file for styles\n\n\n\n// Card component\nfunction Card({ title, image, date, url }) {\n  return (\n    <div className=\"card\" onClick={() => window.open(url, \"_blank\")}>\n      <img src={image} alt={title} />\n      <div className=\"card-body\">\n        <h3>{title}</h3>\n        <p>{date}</p>\n      </div>\n    </div>\n  );\n}\n\n// Main App component\nfunction App() {\n  const [articles, setArticles] = useState([]);\n\n  useEffect(() => {\n    // Adjust the URL according to your server setup\n    fetch('http://localhost:4000/scrape')\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => setArticles(data))\n    .catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      {articles.map(article => (\n        <Card\n          key={article.url}\n          title={article.title}\n          image={article.image}\n          date={article.published_date}\n          url={article.url}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW,CAAC,CAAC;;AAIpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,IAAIA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,IAAI;EAAEC;AAAI,CAAC,EAAE;EACzC,oBACEL,OAAA;IAAKM,SAAS,EAAC,MAAM;IAACC,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACC,IAAI,CAACJ,GAAG,EAAE,QAAQ,CAAE;IAAAK,QAAA,gBAC9DV,OAAA;MAAKW,GAAG,EAAER,KAAM;MAACS,GAAG,EAAEV;IAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BhB,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAI,QAAA,gBACxBV,OAAA;QAAAU,QAAA,EAAKR;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChBhB,OAAA;QAAAU,QAAA,EAAIN;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;;AAEA;AAAAC,EAAA,GAZShB,IAAI;AAab,SAASiB,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACAwB,KAAK,CAAC,8BAA8B,CAAC,CACpCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAIP,WAAW,CAACO,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE9B,OAAA;IAAKM,SAAS,EAAC,WAAW;IAAAI,QAAA,EACvBU,QAAQ,CAACY,GAAG,CAACC,OAAO,iBACnBjC,OAAA,CAACC,IAAI;MAEHC,KAAK,EAAE+B,OAAO,CAAC/B,KAAM;MACrBC,KAAK,EAAE8B,OAAO,CAAC9B,KAAM;MACrBC,IAAI,EAAE6B,OAAO,CAACC,cAAe;MAC7B7B,GAAG,EAAE4B,OAAO,CAAC5B;IAAI,GAJZ4B,OAAO,CAAC5B,GAAG;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKjB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACG,EAAA,CA7BQD,GAAG;AAAAiB,GAAA,GAAHjB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAkB,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}