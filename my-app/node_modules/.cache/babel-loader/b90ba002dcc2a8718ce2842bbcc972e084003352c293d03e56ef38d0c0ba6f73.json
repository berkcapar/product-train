{"ast":null,"code":"var _jsxFileName = \"/Users/berkcapar/Desktop/Berk/Code/product.content/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Make sure to create an App.css file for styles\nimport Navbar from './Components/Navbar/Navbar';\nimport Card from './Components/Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [articles, setArticles] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:4000/scrape').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      const sortedData = data.sort((a, b) => {\n        // Convert date strings to date objects\n        const dateA = new Date(a.published_date);\n        const dateB = new Date(b.published_date);\n        return dateB - dateA; // Sort in descending order\n      });\n      console.log(sortedData); // Log to see the sorted data\n      setArticles(sortedData);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: articles.map(article => /*#__PURE__*/_jsxDEV(Card, {\n        title: article.title,\n        imageUrl: article.image,\n        date: article.published_date,\n        url: article.url\n      }, article.url, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"XsOpLvUbTkfx79dw07TVNsBviNQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","articles","setArticles","fetch","then","response","ok","Error","json","data","sortedData","sort","a","b","dateA","Date","published_date","dateB","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","article","title","imageUrl","image","date","url","_c","$RefreshReg$"],"sources":["/Users/berkcapar/Desktop/Berk/Code/product.content/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css'; // Make sure to create an App.css file for styles\nimport Navbar from './Components/Navbar/Navbar'\nimport Card from './Components/Card/Card'\n\n\nfunction App() {\n  const [articles, setArticles] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:4000/scrape')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        const sortedData = data.sort((a, b) => {\n          // Convert date strings to date objects\n          const dateA = new Date(a.published_date);\n          const dateB = new Date(b.published_date);\n          return dateB - dateA; // Sort in descending order\n        });\n\n        console.log(sortedData); // Log to see the sorted data\n        setArticles(sortedData);\n      })\n      .catch(error => console.error('Error fetching data:', error));\n  }, []);\n  \n  return (\n    <>\n      <Navbar />\n      <div className=\"cards-container\">\n        {articles.map(article => (\n          <Card\n            key={article.url}\n            title={article.title}\n            imageUrl={article.image}\n            date={article.published_date}\n            url={article.url}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW,CAAC,CAAC;AACpB,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,IAAI,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,8BAA8B,CAAC,CAClCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZ,MAAMC,UAAU,GAAGD,IAAI,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACrC;QACA,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACH,CAAC,CAACI,cAAc,CAAC;QACxC,MAAMC,KAAK,GAAG,IAAIF,IAAI,CAACF,CAAC,CAACG,cAAc,CAAC;QACxC,OAAOC,KAAK,GAAGH,KAAK,CAAC,CAAC;MACxB,CAAC,CAAC;MAEFI,OAAO,CAACC,GAAG,CAACT,UAAU,CAAC,CAAC,CAAC;MACzBR,WAAW,CAACQ,UAAU,CAAC;IACzB,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEzB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACE1B,OAAA,CAACH,MAAM;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV9B,OAAA;MAAK+B,SAAS,EAAC,iBAAiB;MAAAL,QAAA,EAC7BrB,QAAQ,CAAC2B,GAAG,CAACC,OAAO,iBACnBjC,OAAA,CAACF,IAAI;QAEHoC,KAAK,EAAED,OAAO,CAACC,KAAM;QACrBC,QAAQ,EAAEF,OAAO,CAACG,KAAM;QACxBC,IAAI,EAAEJ,OAAO,CAACb,cAAe;QAC7BkB,GAAG,EAAEL,OAAO,CAACK;MAAI,GAJZL,OAAO,CAACK,GAAG;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKjB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP;AAAC1B,EAAA,CAzCQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}